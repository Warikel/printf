#ifndef MAIN_H
#define MAIN_H

#include <stdarg.h>
#include <stdio.h>
#include <unistd.h>

#define BUFF_SIZE 1024

#define UNUSED(x) (void)(x)

#define F_MINUS   (1 << 0)
#define F_PLUS    (1 << 1)
#define F_ZERO    (1 << 2)
#define F_HASH    (1 << 3)
#define F_SPACE   (1 << 4)

#define S_LONG    2
#define S_SHORT   1

/**
 * struct fmt - Struct to hold format and associated function
 *
 * @fmt: The format character.
 * @fn: The function associated with the format character.
 */
struct fmt
{
	char fmt; /* Format character */
	int (*fn)(va_list, char[], int, int, int, int); /* Function pointer */
};

/**
 * typedef struct fmt fmt_t - Typedef for the struct fmt
 *
 * @fmt: The format character.
 * @fm_t: The function associated with the format character.
 */
typedef struct fmt fmt_t;

/* Main printf function */
int _printf(const char *format, ...);

/* Functions for printing characters and strings */
int print_char(va_list types, char buffer[],
	      int flags, int width, int precision, int size);
int print_string(va_list types, char buffer[],
		int flags, int width, int precision, int size);
int print_percent(va_list types, char buffer[],
		 int flags, int width, int precision, int size);

/* Functions for printing numbers */
int print_int(va_list types, char buffer[],
	     int flags, int width, int precision, int size);
int print_binary(va_list types, char buffer[],
		int flags, int width, int precision, int size);
int print_unsigned(va_list types, char buffer[],
		   int flags, int width, int precision, int size);
int print_octal(va_list types, char buffer[],
		int flags, int width, int precision, int size);
int print_hexadecimal(va_list types, char buffer[],
		      int flags, int width, int precision, int size);
int print_hexa_upper(va_list types, char buffer[],
		     int flags, int width, int precision, int size);

int print_hexa(va_list types, char map_to[],
	       char buffer[], int flags, char flag_ch, int width, int precision, int size);

/* Function for printing non-printable characters */
int print_non_printable(va_list types, char buffer[],
			int flags, int width, int precision, int size);

/* Function for printing memory addresses */
int print_pointer(va_list types, char buffer[],
		  int flags, int width, int precision, int size);

/* Functions for handling other specifiers */
int get_flags(const char *format, int *i);
int get_width(const char *format, int *i, va_list list);
int get_precision(const char *format, int *i, va_list list);
int get_size(const char *format, int *i);

/* Function for printing a string in reverse */
int print_reverse(va_list types, char buffer[],
		  int flags, int width, int precision, int size);

/* Function for printing a string in rot13 */
int print_rot13string(va_list types, char buffer[],
		      int flags, int width, int precision, int size);

/* Utility functions */
int is_printable(char);
int append_hexa_code(char, char[], int);
int is_digit(char);

long int convert_size_number(long int num, int size);
long int convert_size_unsgnd(unsigned long int num, int size);

#endif /* MAIN_H */
